Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/opmodes/auto/vision/TestCV.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode.opmodes.auto.vision;\r\n\r\nimport com.acmerobotics.dashboard.FtcDashboard;\r\nimport com.acmerobotics.dashboard.telemetry.TelemetryPacket;\r\nimport com.arcrobotics.ftclib.hardware.motors.Motor;\r\nimport com.arcrobotics.ftclib.hardware.motors.MotorEx;\r\nimport com.qualcomm.robotcore.eventloop.opmode.Autonomous;\r\nimport com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;\r\n\r\nimport org.openftc.easyopencv.OpenCvCamera;\r\nimport org.openftc.easyopencv.OpenCvCameraFactory;\r\nimport org.openftc.easyopencv.OpenCvCameraRotation;\r\nimport org.openftc.easyopencv.OpenCvInternalCamera;\r\n\r\n\r\n@Autonomous(name=\"Test CV Thingy\")\r\npublic class TestCV extends LinearOpMode {\r\n    OpenCvCamera camera;\r\n\r\n    FtcDashboard dashboard = FtcDashboard.getInstance();\r\n    TelemetryPacket packet= new TelemetryPacket();\r\n\r\n    MotorEx frontLeft= new MotorEx(hardwareMap, \"motorFL\");\r\n    MotorEx backLeft= new MotorEx(hardwareMap, \"motorBL\");\r\n    MotorEx backRight= new MotorEx(hardwareMap, \"motorBR\");\r\n    MotorEx frontRight= new MotorEx(hardwareMap, \"motorFR\");\r\n\r\n\r\n    public void strafeRight(double power, int sleepTime){\r\n        frontLeft.set(power);\r\n        backLeft.set(-power);\r\n        frontRight.set(power);\r\n        backRight.set(-power);\r\n        sleep(sleepTime);\r\n    }\r\n    public void straight(double power, int sleepTime){\r\n        frontLeft.set(power);\r\n        backLeft.set(power);\r\n        frontRight.set(power);\r\n        backRight.set(power);\r\n        sleep(sleepTime);\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public void runOpMode() throws InterruptedException{\r\n        int cameraMonitorViewId= hardwareMap.appContext.getResources().getIdentifier(\"cameraMonitorViewId\", \"id\",hardwareMap.appContext.getPackageName());\r\n        camera = OpenCvCameraFactory.getInstance().createInternalCamera(OpenCvInternalCamera.CameraDirection.BACK, cameraMonitorViewId);\r\n        OpenCVPipeline pipeline = new OpenCVPipeline(telemetry);\r\n        camera.setPipeline(pipeline);\r\n        camera.openCameraDeviceAsync(new OpenCvCamera.AsyncCameraOpenListener() {\r\n            @Override\r\n            public void onOpened() {\r\n                camera.startStreaming(320,640,OpenCvCameraRotation.UPSIDE_DOWN);\r\n                //hehehe\r\n            }\r\n\r\n            @Override\r\n            public void onError(int errorCode) {\r\n            }\r\n        });\r\n\r\n        backRight.setInverted(true);\r\n        frontRight.setInverted(true);\r\n        backLeft.setInverted(false);\r\n        frontLeft.setInverted(false);\r\n        backRight.setRunMode(Motor.RunMode.RawPower);\r\n        frontLeft.setRunMode(Motor.RunMode.RawPower);\r\n        frontRight.setRunMode(Motor.RunMode.RawPower);\r\n        backLeft.setRunMode(Motor.RunMode.RawPower);\r\n\r\n        /* green 1\r\n        blue 2\r\n        red 3\r\n         */\r\n\r\n        waitForStart();\r\n\r\n        if(pipeline.getSignalVal() == OpenCVPipeline.SignalVal.GREEN){\r\n            /*strafeRight(0.2, 1);\r\n            straight(0.2,1);\r\n\r\n\r\n             */\r\n            packet.put(\"The signal value is green with a percentage of\", OpenCVPipeline.greenPercentage);\r\n\r\n        }else if(pipeline.getSignalVal() ==OpenCVPipeline.SignalVal.YELLOW){\r\n           /* straight(0.2,1);\r\n           */\r\n            packet.put(\"The signal value is yellow with a percentage of\", OpenCVPipeline.yellowPercentage);\r\n\r\n        }else if(pipeline.getSignalVal() ==OpenCVPipeline.SignalVal.PINK){\r\n            /*strafeRight(-0.2,1);\r\n            straight(0.2,1);\r\n            */\r\n            packet.put(\"The signal value is pink with a percentage of\", OpenCVPipeline.pinkPercentage);\r\n\r\n        }\r\n\r\n        camera.stopStreaming();\r\n        //REHEHEHEHEHEHEH\r\n\r\n\r\n    }\r\n\r\n}\r\n
===================================================================
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/opmodes/auto/vision/TestCV.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/opmodes/auto/vision/TestCV.java
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/opmodes/auto/vision/TestCV.java	
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/opmodes/auto/vision/TestCV.java	
@@ -41,8 +41,6 @@
         sleep(sleepTime);
     }
 
-
-
     @Override
     public void runOpMode() throws InterruptedException{
         int cameraMonitorViewId= hardwareMap.appContext.getResources().getIdentifier("cameraMonitorViewId", "id",hardwareMap.appContext.getPackageName());
